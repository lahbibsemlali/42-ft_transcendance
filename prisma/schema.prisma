// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  User
  Admin
  Owner
}

model User {
  id        Int        @id @default(autoincrement())
  username  String     @unique
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  userChats UserChat[]
  Message   Message[]
  roles     userRole[]
}

model Chat {
  id        Int        @id @default(autoincrement())
  name      String?
  isGroup   Boolean    @default(false)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  userChats UserChat[]
  messages  Message[]
  userRoles userRole[]
}

model userRole {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  chatId    Int
  chat      Chat     @relation(fields: [chatId], references: [id])
  role      Role     @default(User)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserChat {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  chatId    Int
  chat      Chat     @relation(fields: [chatId], references: [id])
  role      Role     @default(User)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, chatId])
}

model Message {
  id        Int      @id @default(autoincrement())
  body      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  sender    User     @relation(fields: [senderId], references: [id])
  senderId  Int
  chat      Chat     @relation(fields: [chatId], references: [id])
  chatId    Int
}
